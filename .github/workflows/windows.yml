name: Windows Server
on:
  workflow_dispatch:
    inputs:
      winver:
        description: The version of Windows Server to run
        required: true
        default: 'latest'
        type: choice
        options:
          - '2019'
          - '2022'
          - 'latest'
defaults:
  run:
    shell: cmd

jobs:
  build:
    runs-on: windows-${{ inputs.winver }}
    steps:
    - uses: actions/checkout@v2

    - name: Enable RDP
      run: |
        reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
        powershell -Command "Enable-NetFirewallRule -DisplayGroup 'Remote Desktop'"
        reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 1 /f
      shell: cmd

    - name: Enable services for RDP
      run: |
        net config server /srvcomment:"Windows Server"
        reg add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /V EnableAutoTray /T REG_DWORD /D 0 /F
        net user ${{ secrets.USER_NAME }} ${{ secrets.VNC_USER_PASSWORD }} /add
        net localgroup administrators ${{ secrets.USER_NAME }} /add
        net user administrator /active:yes
        net user installer /delete
        diskperf -Y
        sc config Audiosrv start= auto
        sc start audiosrv
        icacls C:\Windows\Temp /grant ${{ secrets.USER_NAME }}:F
        icacls C:\Windows\installer /grant ${{ secrets.USER_NAME }}:F
      shell: cmd

    - name: Enable SSH
      run: |
        powershell -Command "Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0"
        powershell -Command "Start-Service sshd"
        powershell -Command "Set-Service -Name sshd -StartupType 'Automatic'"
        curl ${{ github.server_url }}/${{ github.repository_owner }}.keys >> "%ProgramData%\ssh\administrators_authorized_keys"
        icacls "%ProgramData%\ssh\administrators_authorized_keys" /inheritance:r /grant "Administrators:F" /grant "SYSTEM:F"
      shell: cmd

    - name: Install and setup Tailscale
      run: |
        choco install tailscale
        git clone https://github.com/badrelmers/RefrEnv --depth 1
        call RefrEnv\refrenv.bat
        del /S /Q /F RefrEnv >NUL 2>&1
        rmdir /S /Q RefrEnv >NUL 2>&1
        tailscale up --authkey ${{ secrets.TAILSCALE_AUTHKEY }} --accept-risk all --advertise-exit-node --unattended
      shell: cmd

    - name: Device has joined Tailscale network as...
      run: hostname

    - name: Ping loop
      run: |
        while (1)
        {
            $hostName = (hostname | Out-String).Trim()
            echo "Device has joined Tailscale network as <$hostName>."
            ping ${{ secrets.TAILSCALE_HOMESERVER }} -n 1
            sleep 60
        }
      shell: powershell
